{
	"swagger": "2.0",
	"host": "",
	"basePath": "/",
	"info": {
		"version": "v1.0",
		"title": "${SWAGGER_TITLE}",
		"description": "${SWAGGER_DESCRIPTION}"
	},
	"schemes": [
		"https"
	],
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "x-api-key",
			"in": "header"
		},
		"gcv-fcl-ca-security-cognito-userpool": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header",
			"x-amazon-apigateway-authtype": "custom",
			"x-amazon-apigateway-authorizer": {
				"authorizerUri": "arn:aws:apigateway:${DEPLOY_REGION}:lambda:path/2015-03-31/functions/arn:aws:lambda:${LAMBDA_AUTHORIZER_REGION}:${LAMBDA_AUTHORIZER_ACCOUNT_ID}:function:${LAMBDA_AUTHORIZER_NAME}/invocations",
				"authorizerCredentials": "arn:aws:iam::${FCL_ACCOUNT_ID}:role/${LAMBDA_AUTHORIZER_INVOKE_ROLE_NAME}",
				"type": "token"
			}
		}
	},
	"x-amazon-apigateway-request-validators": {
		"Validate body, query string parameters, and headers": {
			"validateRequestParameters": true,
			"validateRequestBody": true
		}
	},
	"paths": {
		"/v2/accounts/{userid}/vehicles/{vin}/tripreport/status": {
			"post": {
				"tags": [
					"TRIP REPORT STATUS"
				],
				"summary": "FCL_S116_SC001 | Post tripreport data",
				"description": "",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "userid",
						"in": "path",
						"description": "user ID",
						"required": true,
						"type": "string"
					},
					{
						"name": "vin",
						"in": "path",
						"description": "Vehicle VIN",
						"required": true,
						"type": "string"
					},
					{
						"name": "Authorization",
						"description": "Authorization header. This is an OAuth 2.0 token. ",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "content-type",
						"description": "application/json ",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "SessionId",
						"description": "SessionId is client assigned session identifier used by platform to identify requests and responses that belong to the same session",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "PlatformResponseId",
						"description": "An unique response identifier assigned by platform",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "x-api-key",
						"description": "API key for the Service ",
						"in": "header",
						"required": true,
						"type": "string"
					},
					{
						"name": "x-apigw-api-id",
						"in": "header",
						"required": false,
						"type": "string",
						"description": "API gateway rest api id. Mandatory only in Pre Prod and Prod environment"
					},
					{
						"name": "request-body",
						"in": "body",
						"description": "Remote status",
						"required": true,
						"schema": {
							"type": "object",
							"$ref": "#/definitions/TripStatusRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Router200SuccessResponse"
						}
					},
					"400": {
						"description": "400 response",
						"schema": {
							"$ref": "#/definitions/Router400ErrorResponse"
						}
					},
					"401": {
						"description": "401 response",
						"schema": {
							"$ref": "#/definitions/Router401ErrorResponse"
						}
					},
					"403": {
						"description": "403 response",
						"schema": {
							"$ref": "#/definitions/Router403ErrorResponse"
						}
					},
					"404": {
						"description": "404 response",
						"schema": {
							"$ref": "#/definitions/Router404ErrorResponse"
						}
					},
					"500": {
						"description": "500 response",
						"schema": {
							"$ref": "#/definitions/Router500ErrorResponse"
						}
					},
					"502": {
						"description": "502 response",
						"schema": {
							"$ref": "#/definitions/Router502ErrorResponse"
						}
					}
				},
				"security": [
					{
						"api_key": []
					},
					{
						"gcv-fcl-ca-security-cognito-userpool": []
					}
				],
				"x-amazon-apigateway-integration": {
					"credentials": "arn:aws:iam::${FCL_ACCOUNT_ID}:role/${CORS_LAMBDA_INVOKE_ROLE_NAME}",
					"uri": "arn:aws:apigateway:${DEPLOY_REGION}:lambda:path/2015-03-31/functions/arn:aws:lambda:${DEPLOY_REGION}:${FCL_ACCOUNT_ID}:function:FCL_${FEATURE_CODE}_${ENVIRONMENT}_${DEPLOY_REGION}_SC003-trip-report-details:gsdp/invocations",
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		}
	},
	"definitions": {
		"Router200SuccessResponse": {
			"type": "object",
			"required": [
				"message"
			],
			"properties": {
				"message": {
					"type": "string",
					"description": "Success messsage"
				}
			}
		},
		"Router400ErrorResponse": {
			"type": "object",
			"required": [
				"message"
			],
			"properties": {
				"name": {
					"type": "string",
					"enum": [
						"Bad Request"
					]
				},
				"message": {
					"type": "string",
					"description": "Missing/Invalid Parameter in Request"
				}
			}
		},
		"Router401ErrorResponse": {
			"type": "object",
			"required": [
				"message"
			],
			"properties": {
				"name": {
					"type": "string",
					"enum": [
						"Unauthorized"
					]
				},
				"message": {
					"type": "string",
					"description": "Error message the possible values can be - User not authorized"
				}
			}
		},
		"Router403ErrorResponse": {
			"type": "object",
			"required": [
				"message"
			],
			"properties": {
				"name": {
					"type": "string",
					"enum": [
						"Forbidden"
					]
				},
				"message": {
					"type": "string",
					"description": "description of the error response"
				}
			}
		},
		"Router404ErrorResponse": {
			"type": "object",
			"required": [
				"message"
			],
			"properties": {
				"name": {
					"type": "string",
					"enum": [
						"Not Found"
					]
				},
				"message": {
					"type": "string",
					"description": "description of the error response, values can be - Resource Not Found"
				}
			}
		},
		"Router500ErrorResponse": {
			"type": "object",
			"required": [
				"message"
			],
			"properties": {
				"name": {
					"type": "string",
					"enum": [
						"System Exception"
					]
				},
				"message": {
					"type": "string",
					"description": "description of the error response, values can be - Internal Server Error"
				}
			}
		},
		"Router502ErrorResponse": {
			"type": "object",
			"required": [
				"message"
			],
			"properties": {
				"name": {
					"type": "string",
					"enum": [
						"Bad Gateway"
					]
				},
				"message": {
					"type": "string",
					"description": "Description of the error message - possible values can be Proxy Integration Failed"
				}
			}
		},
		"TripStatusRequest": {
			"type": "object",
			"required": [
				"EventID",
				"Version",
				"Timestamp",
				"Data"
			],
			"properties": {
				"EventID": {
					"type": "string"
				},
				"Version": {
					"type": "string"
				},
				"Timestamp": {
					"type": "number"
				},
				"Data": {
					"$ref": "#/definitions/TripReportDetails"
				}
			}
		},
		"TripReportDetails": {
			"type": "object",
			"required": [
				"tripId",
				"duration",
				"distance",
				"startTime",
				"endTime",
				"averageSpeed",
				"topSpeed",
				"dayDrive",
				"nightDrive",
				"isBusinessTrip",
				"isFavouriteTrip",
				"startLocation",
				"endLocation",				
				"driveStyles",
				"cost",
				"encodedMapData",				
				"fullLocation",
				"ecoData",
				"profiles"
			],
			"properties": {
				"tripId": {
					"type": "string"
				},
				"travelDate": {
					"type": "number"
				},
				"duration": {
					"type": "number"
				},
				"distance": {
					"type": "number"
				},
				"startTime": {
					"type": "number"
				},
				"endTime": {
					"type": "number"
				},
				"averageSpeed": {
					"type": "number"
				},
				"topSpeed": {
					"type": "number"
				},
				"dayDrive": {
					"type": "number"
				},
				"nightDrive": {
					"type": "number"
				},
				"isBusinessTrip": {
					"type": "boolean"
				},
				"isFavouriteTrip": {
					"type": "boolean"
				},
				"startLocation": {
					"$ref": "#/definitions/RequiredLocation"
				},
				"endLocation": {
					"$ref": "#/definitions/RequiredLocation"
				},
				"evModePercentage": {
					"type": "number"
				},
				"driveStyles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DriveStyle"
					}
				},
				"numHardBraking": {
					"type": "number"
				},
				"numHardAcceleration": {
					"type": "number"
				},
				"numHardCornering": {
					"type": "number"
				},
				"numBoundary": {
					"type": "number"
				},
				"isBoundaryOn": {
					"type": "boolean"
				},
				"cost": {
					"type": "number"
				},
				"idleTime": {
					"type": "number"
				},
				"encodedMapData": {
					"type": "string"
				},
				"fuelEfficiency": {
					"type": "number"
				},
				"fullLocation": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RequiredLocation"
					}
				},
				"ecoData": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EcoData"
					}
				},
				"evMode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EvMode"
					}
				},
				"hardBraking": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationHardEvent"
					}
				},
				"hardAcceleration": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationHardEvent"
					}
				},
				"hardCornering": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationHardEvent"
					}
				},
				"boundary": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Location"
					}
				},
				"profiles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Profile"
					}
				}
			}
		},
		"RequiredLocation": {
			"type": "object",
			"required": [
				"latitude",
				"longitude",
				"timestamp"
			],
			"properties": {
				"latitude": {
					"type": "number"
				},
				"longitude": {
					"type": "number"
				},
				"timestamp": {
					"type": "number"
				}
			}
		},
		"Location": {
			"type": "object",
			"properties": {
				"latitude": {
					"type": "number"
				},
				"longitude": {
					"type": "number"
				},
				"timestamp": {
					"type": "number"
				}
			}
		},
		"DriveStyle": {
			"type": "object",
			"properties": {
				"style": {
					"type": "string"
				},
				"duration": {
					"type": "number"
				}
			}
		},
		"EcoData": {
			"type": "object",
			"required": [
				"ecoScore",
				"tripId",
				"profile"
			],
			"properties": {
				"ecoScore": {
					"type": "number"
				},
				"tripId": {
					"type": "string"
				},
				"profile": {
					"type": "string"
				}
			}
		},
		"EvMode": {
			"type": "object",
			"properties": {
				"locations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Location"
					}
				}
			}
		},
		"LocationHardEvent": {
			"type": "object",
			"properties": {
				"latitude": {
					"type": "number"
				},
				"longitude": {
					"type": "number"
				},
				"timestamp": {
					"type": "number"
				},
				"duration": {
					"type": "number"
				}
			}
		},
		"Profile": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"timestamp": {
					"type": "number"
				}
			}
		}
	}
}